import subprocess
import time
import os


def encode_video(input_file, codec, output_file, resolution, bitrate):
    command = [
        'ffmpeg', '-i', input_file, '-vcodec', codec, '-s', resolution, '-b:v', f'{bitrate}k', '-y', output_file
    ]

    start_time = time.time()
    process = subprocess.run(command, stderr=subprocess.PIPE, stdout=subprocess.PIPE)
    end_time = time.time()

    if process.returncode != 0:
        error_message = process.stderr.decode('utf-8')
        print(f"An error occurred: {error_message}")
        return None, error_message

    return end_time - start_time, output_file


def calculate_psnr(reference_file, encoded_file):
    command = [
        'ffmpeg', '-i', reference_file, '-i', encoded_file,
        '-lavfi', 'psnr=stats_file=psnr.log', '-f', 'null', '-'
    ]
    subprocess.run(command, stderr=subprocess.PIPE, stdout=subprocess.PIPE)

    # Parse PSNR from the log file generated by ffmpeg
    with open('psnr.log', 'r') as f:
        psnr_output = f.read()

    # Example line from ffmpeg log: "frame:0 mse_avg:165.137 psnr_avg:37.97..."
    psnr_line = psnr_output.strip().split('\n')[-1]  # Taking the last line assuming it's the summary
    psnr = float(psnr_line.split('psnr_avg:')[1].split()[0])

    # Clean up the psnr.log file
    os.remove('psnr.log')

    return psnr


def get_video_size(file_path):
    return os.path.getsize(file_path)


def main():
    output_csv_file = 'compression_results.csv'
    codecs = {
        'h261': 'h261',
        'mpeg1': 'mpeg1video',
        'mpeg4': 'mpeg4',
        # 'h264': 'libx264',
        # 'h265': 'libx265'
    }
    resolutions = ['1920x1080', '1280x720', '720x480', '352x288', '176x144']
    h261_resolutions = ['352x288', '176x144']
    bitrates = [100, 200, 300, 400, 500, 750, 1000, 1250, 1500, 2000, 2500, 3000, 3500]

    print('filename,filesize,codec,compression_time,compression_ratio,resolution,bitrate_kbps,PSNR', file=open(output_csv_file, 'a'))

    for name, codec in codecs.items():
        for resolution in (h261_resolutions if name == 'h261' else resolutions):
            input_file = f'videos/BigBuckBunny_{resolution}_h264_1min.mp4'
            reference_file = f'videos/BigBuckBunny_{resolution}_h264_1min.mp4'

            for bitrate in bitrates:
                output_file = f'output/output_{name}_{resolution}_{bitrate}k.{"avi" if name == "h261" else "mp4"}'
                print(f'Encoding with {name.upper()} at {resolution} with bitrate {bitrate} kbps...')

                encoding_time, encoded_file = encode_video(input_file, codec, output_file, resolution, bitrate)
                if encoding_time is not None:
                    encoded_size = get_video_size(encoded_file)
                    ref_size = get_video_size(input_file)

                    # Calculate PSNR
                    psnr_score = calculate_psnr(reference_file, encoded_file)

                    file_without_path = output_file.split('/')[-1]
                    print(f'{file_without_path},{encoded_size},{name},{encoding_time},{ref_size/encoded_size},{resolution},{bitrate},{psnr_score}', file=open(output_csv_file, 'a'))
                else:
                    print({
                        'filename': output_file,
                        'filesize': None,
                        'codec': name,
                        'compression_time': None,
                        'compression_ratio': None,
                        'resolution': resolution,
                        'bitrate': bitrate,
                        'PSNR': None
                    })


if __name__ == '__main__':
    main()
